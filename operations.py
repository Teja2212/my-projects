import json
import string
import random
from json import JSONDecodeError
from datetime import datetime

def Register(type,gamers_json_file,sellers_json_file,Email_ID,Username,Password,Contact_Number):
    '''Register Function || Already Given'''
    if type.lower()=='seller':
        f=open(sellers_json_file,'r+')
        d={
            "Email":Email_ID,
            "Username":Username,
            "Password":Password,
            "Contact Number":Contact_Number,
        }
        try:
            content=json.load(f)
            if d not in content and d["Username"] not in str(content):
                content.append(d)
                f.seek(0)
                f.truncate()
                json.dump(content,f)
        except JSONDecodeError:
            l=[]
            l.append(d)
            json.dump(l,f)
        f.close()
        return True
    elif type.lower()=='gamer':
        f=open(gamers_json_file,'r+')
        d={
            "Email":Email_ID,
            "Username":Username,
            "Password":Password,
            "Contact Number":Contact_Number,
            "Wishlist":[],
            "Cart":[],
        }
        try:
            content=json.load(f)
            if d not in content and d["Username"] not in str(content):
                content.append(d)
                f.seek(0)
                f.truncate()
                json.dump(content,f)
        except JSONDecodeError:
            l=[]
            l.append(d)
            json.dump(l,f)
        f.close()

def Login(type,gamers_json_file,sellers_json_file,Username,Password):
    '''Login Functionality || Return True if successfully logged in else False || Already Given'''
    d=0
    if type.lower()=='seller':
        f=open(sellers_json_file,'r+')
    else:
        f=open(gamers_json_file,'r+')
    try:
        content=json.load(f)
    except JSONDecodeError:
        return False
    for i in range(len(content)):
        if content[i]["Username"]==Username and content[i]["Password"]==Password:
            d=1
            break
    f.seek(0)
    f.truncate()
    json.dump(content,f)
    f.close()
    if d==0:
        return False
    return True

def AutoGenerate_ProductID():
    '''Return a autogenerated random product ID || Already Given'''
    product_ID=''.join(random.choices(string.ascii_uppercase+string.digits,k=4))
    return product_ID

def AutoGenerate_OrderID():
    '''Return a autogenerated random product ID || Already Given'''
    Order_ID=''.join(random.choices(string.ascii_uppercase+string.digits,k=3))
    return Order_ID

def days_between(d1, d2):
    '''Calculating the number of days between two dates || Already Given'''
    d1 = datetime.strptime(d1, "%Y-%m-%d")
    d2 = datetime.strptime(d2, "%Y-%m-%d")
    return abs((d2 - d1).days)

def Create_Product(owner,product_json_file,product_ID,product_title,product_type,price_per_day,total_stock_available):
    '''Creating a product || Return True if successfully created else False'''
    '''Write your code below'''
    d={"Seller Username": owner,
    "Product ID": product_ID, 
    "Product Title": product_title, 
    "Product Type": product_type, 
    "Price Per Day": price_per_day, 
    "Total Stock Available":total_stock_available}
    x=open(product_json_file,"r+")
    try:
        y=json.load(x)
        if d not in y:
            y.append(d)
            x.seek(0)
            x.truncate()
            json.dump(y,x)
    except JSONDecodeError:
        list1=[]
        list1.append(d)
        json.dump(list1,x)
    x.close()
    return True



def Fetch_all_Products_created_by_seller(owner,product_json_file):
    '''Get all products created by the seller(owner)'''
    '''Write your code below'''
    x=open(product_json_file,"r+")
    y=json.load(x)
    product_dict=[]
    for i in range(len(y)):
        if y[i]["Seller Username"]==owner:
            product_dict.append(y[i])
    x.close()
    return product_dict



def Fetch_all_products(products_json_file):
    '''Get all products created till now || Helper Function || Already Given'''
    All_Products_list=[]
    f=open(products_json_file,'r')
    try:
        content=json.load(f)
        All_Products_list=content
    except JSONDecodeError:
        pass
    return All_Products_list

def Fetch_Product_By_ID(product_json_file,product_ID):
    '''Get product deatils by product ID'''
    '''Write your code below'''
    x=open(product_json_file,"r+")
    y=json.load(x)
    product_dict=[]
    for i in range(len(y)):
        if y[i]["Product ID"]==product_ID:
            product_dict.append(y[i])
    x.close()
    return product_dict


def Update_Product(Username,product_json_file,product_ID,detail_to_be_updated,new_value):
    '''Updating Product || Return True if successfully updated else False'''
    '''Write your code below'''
    x=open(product_json_file,"r+")
    y=json.load(x)
    for i in range(len(y)):
        if y[i]["Seller Username"]==Username:
            try:
                c=y[i][detail_to_be_updated]
            except KeyError:
                return False
            y[i][detail_to_be_updated]=new_value
            x.seek(0)
            x.truncate()
            json.dump(y,x)
            x.close()
            return True
    x.close()
    return False

def Add_item_to_wishlist(Username,product_ID,gamers_json_file):
    '''Add Items to wishlist || Return True if added successfully else False'''
    '''Write your code below'''#1
    x=open(gamers_json_file,"r+")
    y=json.load(x)
    for i in range(len(y)):
        if y[i]["Username"]==Username:
            y[i]["Wishlist"].append(product_ID)
            x.seek(0)
            x.truncate()
            json.dump(y,x)
            x.close()
            return True
    x.close()
    return False


def Remove_item_from_wishlist(Username,product_ID,gamers_json_file):
    '''Remove items from wishlist || Return True if removed successfully else False'''
    '''Write your code below'''#2
    x=open(gamers_json_file,"r+")
    y=json.load(x)
    for i in range(len(y)):
        if y[i]["Username"]==Username:
            y[i]["Wishlist"].remove(product_ID)
            x.seek(0)
            x.truncate()
            json.dump(y,x)
            x.close()
            return True
    x.close()
    return False
    

def Add_item_to_cart(Username,product_ID,Quantity,gamers_json_file,booking_start_date,booking_end_date,products_json_file):
    '''Add item to the cart || Check whether the quantity mentioned is available || Return True if added successfully else False'''
    '''Add the Product ID, Quantity, Price, Booking Start Date, Booking End Date in the cart as list of dictionaries'''
    '''Write your code below'''#3
    x=open(gamers_json_file,"r+")
    y=json.load(x)
    for i in range(len(y)):
        if y[i]["Username"]==Username:
            for j in range(len(y[i]["Cart"])):
                y[i]["Cart"][j]["Quantity"]=Quantity
                y[i]["Cart"][j]["Product ID"]=product_ID
                y[i]["Cart"][j]["Booking Start Date"]=booking_start_date
                y[i]["Cart"][j]["Booking End Date"]=booking_end_date
                x.seek(0)
                x.truncate()
                json.dump(y,x)
                x.close()
                return True
    x.close()
    return False
    

def Remove_item_from_cart(Username,product_ID,gamers_json_file):
    '''Remove items from the cart || Return True if removed successfully else False'''
    '''Write your code below'''#4
    x=open(gamers_json_file,"r+")
    y=json.load(x)
    for i in range(len(y)):
        if y[i]["Username"]==Username:
            for j in range(len(y[i]["Cart"])):
                if y[i]["Cart"][j]["Product ID"]==product_ID:
                    del y[i]["Cart"][j]
                    x.seek(0)
                    x.truncate()
                    json.dump(y,x)
                    x.close()
                    return True
    x.close()
    return False



    
    

def View_Cart(Username,gamers_json_file):
    '''Return the current cart of the user'''
    '''Write your code below'''#5
    x=open(gamers_json_file,"r+")
    y=json.load(x)
    view_details=[]
    for i in range(len(y)):
        if y[i]["Username"]==Username:
            view_details.append(y[i]["Cart"])
    x.close()
    return view_details

    
    

def Place_order(Username,gamers_json_file,Order_Id,orders_json_file,products_json_file):
    '''Place order || Return True is order placed successfully else False || Decrease the quantity of the product orderd if successfull'''
    '''Write your code below'''#6
    x=open(orders_json_file,"r+")
    y=json.load(x)
    x1=open(gamers_json_file,"r+")
    y1=json.load(x1)
    for i in range(len(y)):
        for j in range(len(y1)):
            if y[i]["Ordered by"]==y1[j]["Username"]==Username:
                for yak in range(len(y[i]["Items"][yak])):
                    y[i]["Items"][yak]["Quantity"]-=1
                    return True
    return False
def View_User_Details(gamers_json_file,Username):
    '''Return a list with all gamer details based on the username || return an empty list if username not found'''
    '''Write your code below'''#7
    x=open(gamers_json_file,"r+")
    y=json.load(x)
    user_dict=[]
    for i in range(len(y)):
        if y[i]["Username"]==Username:
            user_dict.append(y[i])
    x.close()
    return user_dict


def Update_User(gamers_json_file,Username,detail_to_be_updated,updated_detail):
    '''Update the detail_to_be_updated of the user to updated_detail || Return True if successful else False'''
    '''Write your code below'''#8
    x=open(gamers_json_file,"r+")
    y=json.load(x)
    for i in range(len(y)):
        if y[i]["Username"]==Username:
            try:
                c=y[i][detail_to_be_updated]
            except KeyError:
                return False
            y[i][detail_to_be_updated]=updated_detail
            x.seek(0)
            x.truncate()
            json.dump(y,x)
            x.close()
            return True
    x.close()
    return False
    
    

def Fetch_all_orders(orders_json_file,Username):
    '''Fetch all previous orders for the user and return them as a list'''
    '''Write your code below'''#9
    x=open(orders_json_file,"r+")
    y=json.load(x)
    order_details=[]
    for i in range(len(y)):
        if y[i]["Ordered by"]==Username:
            order_details.append(y[i]["Items"])
    x.close()
    return order_details
    
    
    

